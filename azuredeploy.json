{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "siteName": {
      "type": "string"
    },
    "repoUrl": {
      "type": "string"
    },
    "branch": {
      "type": "string"
    },
    "databaseName": {
      "type": "string",
      "metadata": {
        "description": "The name for the Mongo DB database"
      }
    },
    "collectionName": {
      "type": "string",
      "metadata": {
        "description": "The name for the first Mongo DB collection"
      }
    }
  },
  "variables": {
    "storageName": "[concat('messages', uniqueString(resourceGroup().id))]",
    "databaseAccountName": "[concat('messagesaccount', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "name": "[parameters('siteName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('microsoft.insights/components/', parameters('siteName'))]",
        "[resourceId('Microsoft.Insights/components', parameters('siteName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('databaseAccountName'))]"
      ],
      "properties": {
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')),'2019-06-01').keys[0].value)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')),'2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')),'2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower('functionName')]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', parameters('siteName')), '2018-05-01-preview').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "10.14.1"
            },
            {
              "name": "MongodbConnectionString",
              "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('databaseAccountName')), '2019-12-12').connectionStrings[0].connectionString]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2018-11-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('repoUrl')]",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true
          }
        }
      ]
    },
    {
      "name": "[variables('databaseAccountName')]",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2019-12-12",
      "location": "[resourceGroup().location]",
      "kind": "MongoDB",
      "properties": {
        "locations": [
          {
            "locationName": "[resourceGroup().location]",
            "failoverPriority": 0
          }
        ],
        "databaseAccountOfferType": "Standard"
      },
      "resources": [
        {
          "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
          "name": "[concat(variables('databaseAccountName'), '/', parameters('databaseName'))]",
          "apiVersion": "2020-03-01",
          "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('databaseAccountName'))]" ],
          "properties": {
            "resource": {
              "id": "[parameters('databaseName')]"
            },
            "options": { "throughput": 400 }
          }
        },
        {
          "type": "Microsoft.DocumentDb/databaseAccounts/mongodbDatabases/collections",
          "name": "[concat(variables('databaseAccountName'), '/', parameters('databaseName'), '/', parameters('collectionName'))]",
          "apiVersion": "2020-03-01",
          "dependsOn": [
            "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('databaseAccountName'))]",
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', variables('databaseAccountName'), parameters('databaseName'))]" 
            ],
          "properties": {
            "resource": {
              "id": "[parameters('collectionName')]",
              "shardKey": { "user_id": "Hash" },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', variables('databaseAccountName'), parameters('databaseName'), parameters('collectionName'))]" 
              ],
              "indexes": [
                {
                  "key": { "keys": [ "user_id", "user_address" ] },
                  "options": { "unique": "true" }
                },
                {
                  "key": { "keys": [ "_ts" ] },
                  "options": { "expireAfterSeconds": "2629746" }
                }
              ],
              "options": {
                "If-Match": "<ETag>"
              }
            }
          }
        }
      ]
    },
    {
      "name": "[variables('storageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "tags": {
        "displayName": "[variables('storageName')]"
      },
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      }
    },
    {
      "apiVersion": "2018-05-01-preview",
      "name": "[parameters('siteName')]",
      "type": "Microsoft.Insights/components",
      "location": "[resourceGroup().location]",
      "kind": "web",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]": "Resource"
      },
      "properties": {
        "ApplicationId": "[parameters('siteName')]",
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    }
  ],
  "outputs": {}
}